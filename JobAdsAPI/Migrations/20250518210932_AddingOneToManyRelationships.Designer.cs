// <auto-generated />
using System;
using JobAdsAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JobAdsAPI.Migrations
{
    [DbContext(typeof(JobAdDbContext))]
    [Migration("20250518210932_AddingOneToManyRelationships")]
    partial class AddingOneToManyRelationships
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("JobAdsAPI.Models.JobAd", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CompanyName")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ExpierienceLevelId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsCSharpMentioned")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDotNetMentioned")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsSQLMentioned")
                        .HasColumnType("INTEGER");

                    b.Property<string>("JobTitle")
                        .HasColumnType("TEXT");

                    b.Property<int?>("LocationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("OtherSkills")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PublishedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("WorkTypeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ExpierienceLevelId");

                    b.HasIndex("LocationId");

                    b.HasIndex("WorkTypeId");

                    b.ToTable("JobAds");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyName = "Tech Corp",
                            IsCSharpMentioned = true,
                            IsDotNetMentioned = true,
                            IsSQLMentioned = false,
                            JobTitle = "Software Engineer",
                            OtherSkills = "Azure, Docker",
                            PublishedAt = new DateTime(2023, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CompanyName = "Web Solutions",
                            IsCSharpMentioned = false,
                            IsDotNetMentioned = false,
                            IsSQLMentioned = false,
                            JobTitle = "Frontend Developer",
                            OtherSkills = "React, JavaScript",
                            PublishedAt = new DateTime(2024, 4, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("JobAdsAPI.Models.JobAdDescription", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("EmployerDescription")
                        .HasColumnType("TEXT");

                    b.Property<int>("JobAdId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("JobDescription")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("JobAdId")
                        .IsUnique();

                    b.ToTable("JobAdDescriptions");
                });

            modelBuilder.Entity("JobAdsAPI.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("JobAdsAPI.Models.WorkType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("WorkType");
                });

            modelBuilder.Entity("JobAdsAPI.Models.JobAd", b =>
                {
                    b.HasOne("JobAdsAPI.Models.Location", "ExpierienceLevel")
                        .WithMany()
                        .HasForeignKey("ExpierienceLevelId");

                    b.HasOne("JobAdsAPI.Models.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId");

                    b.HasOne("JobAdsAPI.Models.WorkType", "WorkType")
                        .WithMany()
                        .HasForeignKey("WorkTypeId");

                    b.Navigation("ExpierienceLevel");

                    b.Navigation("Location");

                    b.Navigation("WorkType");
                });

            modelBuilder.Entity("JobAdsAPI.Models.JobAdDescription", b =>
                {
                    b.HasOne("JobAdsAPI.Models.JobAd", null)
                        .WithOne("JobAdDescription")
                        .HasForeignKey("JobAdsAPI.Models.JobAdDescription", "JobAdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("JobAdsAPI.Models.JobAd", b =>
                {
                    b.Navigation("JobAdDescription");
                });
#pragma warning restore 612, 618
        }
    }
}
